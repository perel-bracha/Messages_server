{
  "version": 3,
  "sources": ["../../src/jewishDateHebrew.ts"],
  "sourcesContent": ["/**\n * Copyright (c) Shmulik Kravitz.\n *\n * This source code is licensed under the MIT license.\n * See the LICENSE file in the root directory for more information.\n *\n */\n\nimport gematriya from \"gematriya\";\nimport type {\n  BasicJewishDate,\n  BasicJewishDateHebrew,\n  JewishMonthType,\n} from \"./interfaces\";\nimport { JewishMonth } from \"./interfaces\";\n\n/**\n * Returns the name of a Jewish month in Hebrew, given its type.\n * @param {JewishMonthType} jewishMonth - The Jewish month type.\n * @returns {string} - The name of the Jewish month in Hebrew.\n */\nexport const getJewishMonthInHebrew = (\n  jewishMonth: JewishMonthType,\n): string => {\n  const jewishMonthsHebrewNamesDic = {\n    [JewishMonth.None]: \"\u05DC\u05DC\u05D0\",\n\n    [JewishMonth.Tishri]: \"\u05EA\u05E9\u05E8\u05D9\",\n    [JewishMonth.Cheshvan]: \"\u05D7\u05E9\u05D5\u05DF\",\n    [JewishMonth.Kislev]: \"\u05DB\u05E1\u05DC\u05D5\",\n    [JewishMonth.Tevet]: \"\u05D8\u05D1\u05EA\",\n    [JewishMonth.Shevat]: \"\u05E9\u05D1\u05D8\",\n    [JewishMonth.Adar]: \"\u05D0\u05D3\u05E8\",\n    [JewishMonth.AdarI]: \"\u05D0\u05D3\u05E8 \u05D0\",\n    [JewishMonth.AdarII]: \"\u05D0\u05D3\u05E8 \u05D1\",\n    [JewishMonth.Nisan]: \"\u05E0\u05D9\u05E1\u05DF\",\n    [JewishMonth.Iyyar]: \"\u05D0\u05D9\u05D9\u05E8\",\n    [JewishMonth.Sivan]: \"\u05E1\u05D9\u05D5\u05DF\",\n    [JewishMonth.Tammuz]: \"\u05EA\u05DE\u05D5\u05D6\",\n    [JewishMonth.Av]: \"\u05D0\u05D1\",\n    [JewishMonth.Elul]: \"\u05D0\u05DC\u05D5\u05DC\",\n  };\n  return jewishMonthsHebrewNamesDic[jewishMonth];\n};\n\n/**\n * Converts a number to its Hebrew equivalent in gematria\n * @param num - The number to convert to Hebrew\n * @param addGeresh - Whether or not to add a geresh symbol (') to the end of the number\n * @param addPunctuate - Whether or not to add a punctuation mark (.) after the thousands digit\n * @returns The Hebrew equivalent of the given number\n */\nexport const convertNumberToHebrew = (\n  num: number,\n  addGeresh = true,\n  addPunctuate = true,\n): string => {\n  return gematriya(num, { geresh: addGeresh, punctuate: addPunctuate });\n};\n\n/**\n * Converts a basic Jewish date object to a Hebrew date object with Hebrew letters.\n * @param {BasicJewishDate} jewishDate - The basic Jewish date object to convert.\n * @returns {BasicJewishDateHebrew} The Hebrew date object with Hebrew letters.\n */\nexport const toHebrewJewishDate = (\n  jewishDate: BasicJewishDate,\n): BasicJewishDateHebrew => {\n  return {\n    day: convertNumberToHebrew(jewishDate.day),\n    monthName: getJewishMonthInHebrew(jewishDate.monthName),\n    year: convertNumberToHebrew(jewishDate.year),\n  };\n};\n\n/**\n * Formats a Jewish date object into a string representation in Hebrew.\n * @param {BasicJewishDate} jewishDate - The Jewish date object to format.\n * @returns {string} The Hebrew string representation of the Jewish date.\n */\nexport const formatJewishDateInHebrew = (\n  jewishDate: BasicJewishDate,\n): string => {\n  const jewishDateInHebrew = toHebrewJewishDate(jewishDate);\n  return `${jewishDateInHebrew.day} ${jewishDateInHebrew.monthName} ${jewishDateInHebrew.year}`;\n};\n"],
  "mappings": "AAQA,OAAOA,MAAe,YAMtB,OAAS,eAAAC,MAAmB,kBAOrB,IAAMC,EACXC,IAEmC,CACjC,CAACF,EAAY,IAAI,EAAG,qBAEpB,CAACA,EAAY,MAAM,EAAG,2BACtB,CAACA,EAAY,QAAQ,EAAG,2BACxB,CAACA,EAAY,MAAM,EAAG,2BACtB,CAACA,EAAY,KAAK,EAAG,qBACrB,CAACA,EAAY,MAAM,EAAG,qBACtB,CAACA,EAAY,IAAI,EAAG,qBACpB,CAACA,EAAY,KAAK,EAAG,4BACrB,CAACA,EAAY,MAAM,EAAG,4BACtB,CAACA,EAAY,KAAK,EAAG,2BACrB,CAACA,EAAY,KAAK,EAAG,2BACrB,CAACA,EAAY,KAAK,EAAG,2BACrB,CAACA,EAAY,MAAM,EAAG,2BACtB,CAACA,EAAY,EAAE,EAAG,eAClB,CAACA,EAAY,IAAI,EAAG,0BACtB,GACkCE,CAAW,EAUlCC,EAAwB,CACnCC,EACAC,EAAY,GACZC,EAAe,KAERP,EAAUK,EAAK,CAAE,OAAQC,EAAW,UAAWC,CAAa,CAAC,EAQzDC,EACXC,IAEO,CACL,IAAKL,EAAsBK,EAAW,GAAG,EACzC,UAAWP,EAAuBO,EAAW,SAAS,EACtD,KAAML,EAAsBK,EAAW,IAAI,CAC7C,GAQWC,EACXD,GACW,CACX,IAAME,EAAqBH,EAAmBC,CAAU,EACxD,MAAO,GAAGE,EAAmB,GAAG,IAAIA,EAAmB,SAAS,IAAIA,EAAmB,IAAI,EAC7F",
  "names": ["gematriya", "JewishMonth", "getJewishMonthInHebrew", "jewishMonth", "convertNumberToHebrew", "num", "addGeresh", "addPunctuate", "toHebrewJewishDate", "jewishDate", "formatJewishDateInHebrew", "jewishDateInHebrew"]
}
